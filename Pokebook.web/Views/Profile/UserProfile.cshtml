@model ProfileFriendVM
@{
    ViewData["Title"] = "FriendProfile";
}

<div>
    <header id='coverPicture'
            style='background-image: url(@Url.Content($"https://localhost:44321/api/users/CoverPicture/{Model.Friend.CoverPicture}")),
                                     url(/images/default.jpg)'>
        <section class='inner'>
            <div class="row">
                <div class="col-md-12">
                    <img src="https://localhost:44321/api/users/ProfilePicture/@(Model.Friend.ProfilePicture)" alt="@Model.Friend.ProfilePicture"
                         onerror="this.src='/images/default.png'" id="profilePicture" />
                    <h2>@Model.Friend.UserName</h2>
                </div>
            </div>
        </section>
    </header>
</div>

<div class="list-group row userInfo" id="profileInfo">
    <h2>This is trainer @Model.Friend.UserName</h2>
    <nav class="col-md-4">
        <ul class="links">
            <li class="list-group-item list-group-item-action active" v-on:click="getUserInfo($event)">Personal info</li>
            <li class="list-group-item list-group-item-action" v-on:click="getPokeInfo($event)">Pokemon info</li>
            <li class="list-group-item list-group-item-action" v-on:click="getFriendsInfo($event)">Friends</li>
        </ul>
    </nav>
    <div class="information col-md-7">
        @{
            if (Model.Friendship != null && Model.Friendship.Accepted)//dit hangt af als de user al een friend is (als er dus een friendship db row is)
            {
                <img src="~/images/removeFriend.png" id="removeFriend" v-on:click="editFriendStatus($event)" alt="remove friend" title="remove friend"/>
            }
            else if (Model.Friendship != null && !Model.Friendship.Accepted)
            {
                <img src="~/images/friendRequestSend.png" id="friendRequestSend" alt="request send" title="request send"/>
            }
            else
            {
                <img src="~/images/addFriend.png" id="addFriend" v-on:click="editFriendStatus($event)" alt="add friend" title="add friend"/>
            }
        }

        <input type="hidden" id="friendId" value="@Model.Friend.Id" />
        <input type="hidden" id="userId" value="@Model.Me.Id" />
        <article id="userInfo">
            <h3>Personal information about @Model.Friend.UserName</h3>
            <p>First name: @Model.Friend.FirstName</p>
            <p>Last name: @Model.Friend.LastName</p>
            <p>Username: @Model.Friend.UserName</p>
        </article>
        <article id="pokeInfo" hidden>
            <h3>Pokemon interests</h3>
            <p>Favorite Pokemon: @Model.Friend.FavoritePokemon</p>
            <p>Favorite Pokemon Game: @Model.Friend.FavoritePokemonGame</p>
        </article>
        <article id="friendInfo" hidden>
            <h3>Friends overview</h3>
            @{
                foreach (var friend in Model.FriendsOfFriend)
                {
                    <div>
                        <a asp-action="UserProfile" asp-route-username="@(friend.UserName)">
                            <img src="https://localhost:44321/api/users/ProfilePicture/@(friend.ProfilePicture)" alt="@friend.ProfilePicture"
                                 title="open @friend.UserName profile" onerror="this.src='/images/default.png'" /><br />
                            <p>@friend.UserName</p>
                        </a>
                    </div>
                }
            }
        </article>
    </div>
</div>

@section scripts{
    <script src="~/js/vue.js"></script>
    <script src="~/js/vueFriendProfile.js"></script>
}