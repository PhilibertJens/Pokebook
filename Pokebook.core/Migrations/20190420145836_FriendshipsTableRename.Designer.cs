// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pokebook.core.Data;

namespace Pokebook.core.Migrations
{
    [DbContext(typeof(PokebookContext))]
    [Migration("20190420145836_FriendshipsTableRename")]
    partial class FriendshipsTableRename
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Pokebook.core.Models.Chat", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateDate");

                    b.Property<DateTime?>("Created")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<Guid>("CreatorId");

                    b.Property<string>("Image");

                    b.Property<string>("LastMessage");

                    b.Property<string>("Name");

                    b.Property<int>("NumberOfMessages");

                    b.Property<int>("NumberOfUsers");

                    b.Property<string>("Theme");

                    b.HasKey("Id");

                    b.ToTable("Chats");

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000001"),
                            CreateDate = new DateTime(2019, 4, 20, 16, 58, 35, 984, DateTimeKind.Local).AddTicks(5876),
                            Created = new DateTime(2019, 4, 20, 16, 58, 36, 901, DateTimeKind.Local).AddTicks(1770),
                            CreatorId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Awesome Chat",
                            NumberOfMessages = 0,
                            NumberOfUsers = 0
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000002"),
                            CreateDate = new DateTime(2019, 4, 20, 14, 58, 35, 987, DateTimeKind.Local).AddTicks(7489),
                            Created = new DateTime(2019, 4, 20, 16, 58, 36, 901, DateTimeKind.Local).AddTicks(1892),
                            CreatorId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Another awesome Chat",
                            NumberOfMessages = 0,
                            NumberOfUsers = 0
                        });
                });

            modelBuilder.Entity("Pokebook.core.Models.Friendship", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Accepted");

                    b.Property<DateTime?>("Created")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<Guid>("IdApprover");

                    b.Property<Guid>("IdRequester");

                    b.Property<Guid?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Friendships");

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000001"),
                            Accepted = true,
                            Created = new DateTime(2019, 4, 20, 16, 58, 36, 903, DateTimeKind.Local).AddTicks(6501),
                            IdApprover = new Guid("00000000-0000-0000-0000-000000000002"),
                            IdRequester = new Guid("00000000-0000-0000-0000-000000000001")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000002"),
                            Accepted = false,
                            Created = new DateTime(2019, 4, 20, 16, 58, 36, 903, DateTimeKind.Local).AddTicks(6572),
                            IdApprover = new Guid("63ed99a2-e0dc-46d5-4c0c-08d6bce3eda7"),
                            IdRequester = new Guid("00000000-0000-0000-0000-000000000001")
                        });
                });

            modelBuilder.Entity("Pokebook.core.Models.Message", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("ChatId");

                    b.Property<DateTime?>("Created")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("ImageName");

                    b.Property<DateTime>("SendDate");

                    b.Property<Guid>("SenderId");

                    b.Property<string>("Text");

                    b.HasKey("Id");

                    b.HasIndex("ChatId");

                    b.HasIndex("SenderId");

                    b.ToTable("Messages");

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000001"),
                            ChatId = new Guid("00000000-0000-0000-0000-000000000002"),
                            Created = new DateTime(2019, 4, 20, 16, 58, 36, 903, DateTimeKind.Local).AddTicks(7632),
                            SendDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SenderId = new Guid("00000000-0000-0000-0000-000000000001"),
                            Text = "Hello Jon. This is Tyrion"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000002"),
                            ChatId = new Guid("00000000-0000-0000-0000-000000000002"),
                            Created = new DateTime(2019, 4, 20, 16, 58, 36, 903, DateTimeKind.Local).AddTicks(7704),
                            SendDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SenderId = new Guid("00000000-0000-0000-0000-000000000002"),
                            Text = "Hello Tyrion. I'm Jon"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000003"),
                            ChatId = new Guid("00000000-0000-0000-0000-000000000001"),
                            Created = new DateTime(2019, 4, 20, 16, 58, 36, 903, DateTimeKind.Local).AddTicks(7769),
                            SendDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SenderId = new Guid("00000000-0000-0000-0000-000000000001"),
                            Text = "This is a chat with myself. Is this even possible?"
                        });
                });

            modelBuilder.Entity("Pokebook.core.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<DateTime?>("Created");

                    b.Property<string>("Email");

                    b.Property<bool>("EmailConfirmed");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTime>("LockoutEnd");

                    b.Property<string>("NormalizedEmail");

                    b.Property<string>("NormalizedUserName");

                    b.Property<int>("NumberOfFriends");

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000001"),
                            AccessFailedCount = 0,
                            Created = new DateTime(2019, 4, 20, 16, 58, 36, 903, DateTimeKind.Local).AddTicks(9506),
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            LockoutEnd = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfFriends = 0,
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UserName = "Tyrion Lannister"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000002"),
                            AccessFailedCount = 0,
                            Created = new DateTime(2019, 4, 20, 16, 58, 36, 903, DateTimeKind.Local).AddTicks(9638),
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            LockoutEnd = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfFriends = 0,
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UserName = "Jon Snow"
                        });
                });

            modelBuilder.Entity("Pokebook.core.Models.UserChat", b =>
                {
                    b.Property<Guid>("ChatId");

                    b.Property<Guid>("UserId");

                    b.Property<DateTime?>("Created");

                    b.Property<Guid>("Id");

                    b.HasKey("ChatId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("UserChats");

                    b.HasData(
                        new
                        {
                            ChatId = new Guid("00000000-0000-0000-0000-000000000001"),
                            UserId = new Guid("00000000-0000-0000-0000-000000000001"),
                            Created = new DateTime(2019, 4, 20, 16, 58, 36, 904, DateTimeKind.Local).AddTicks(493),
                            Id = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            ChatId = new Guid("00000000-0000-0000-0000-000000000002"),
                            UserId = new Guid("00000000-0000-0000-0000-000000000002"),
                            Created = new DateTime(2019, 4, 20, 16, 58, 36, 904, DateTimeKind.Local).AddTicks(547),
                            Id = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            ChatId = new Guid("00000000-0000-0000-0000-000000000002"),
                            UserId = new Guid("00000000-0000-0000-0000-000000000001"),
                            Created = new DateTime(2019, 4, 20, 16, 58, 36, 904, DateTimeKind.Local).AddTicks(594),
                            Id = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Pokebook.core.Models.Friendship", b =>
                {
                    b.HasOne("Pokebook.core.Models.User")
                        .WithMany("Friendships")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Pokebook.core.Models.Message", b =>
                {
                    b.HasOne("Pokebook.core.Models.Chat", "Chat")
                        .WithMany("Messages")
                        .HasForeignKey("ChatId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Pokebook.core.Models.User", "Sender")
                        .WithMany("Messages")
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Pokebook.core.Models.UserChat", b =>
                {
                    b.HasOne("Pokebook.core.Models.Chat", "Chat")
                        .WithMany("UserChats")
                        .HasForeignKey("ChatId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Pokebook.core.Models.User", "User")
                        .WithMany("UserChats")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
